# 2020-09-16
Ah, testing frameworks. Quite the large bikeshed if there ever was one

I'm most happy with testing frameworks that support nesting of contexts (e.g. Mocha, RSpec)
I can get by in the flat ones (e.g. Python's unittest) but it doesn't feel as powerful/intuitive

A quick Google search pops up a few items:
- https://github.com/google/googletest
- https://github.com/catchorg/Catch2

We also saw Codewars used Igloo:
- https://github.com/codewars/codewars-runner-cli/tree/aeb3c44d46f72d732d3d776d5c299b3ac2f6f6be/frameworks/cpp
- https://github.com/joakimkarlsson/igloo

While Igloo doesn't seem too recently updated, I'm guessing it's just finalized
Also, it seems to have the most straightforward docs so I'm compelled to just use it

I'll also ask a friend for their opinion but I want to get to writing the language more right now
Not focusing on best library for X

...
Their recommendations are:
- Lint via `clang-format` (I believe I saw another option from Google)
- Test via "gtest/gmock", pretty sure these are `googletest`

# 2020-09-23
Igloo was pretty nice
Very straightforward once we got it up and running
I'm a little concerned about its debugging messages being not so great but good enough for me for now

Moving onto linters:
- https://www.reddit.com/r/cpp/comments/5b397d/what_c_linter_do_you_use/
    - flint, not actively maintained (confirming due to being in `archive` org and having README notice)
    - clang-tidy, guessing related to `clang-format`
    - cppcheck
    - coverity
- Even more here https://invisible-island.net/personal/lint-tools.html

Going to try `clang-format` to start
